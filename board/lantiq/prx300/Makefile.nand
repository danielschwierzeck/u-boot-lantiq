include $(srctree)/config.mk
include $(srctree)/arch/$(ARCH)/Makefile

BOARDDIR := $(VENDOR)/$(BOARD)
TOPDIR := $(srctree)

BCH_ENCODER := $(TOPDIR)/board/$(BOARDDIR)/bch_enc.c
ROM_HEADER_BCH_CAP := 8

ifdef CONFIG_PRX300_GPHY_FW_EMBEDDED
 GPHY_FIRMWARE = $(TOPDIR)/board/$(BOARDDIR)/gphy_firmware.img
 GPHYFW_PAD = $(shell echo "$$(( $(CONFIG_PRX300_GPHY_FW_ADDR) & 0xFFFFF ))" )
 ifdef CONFIG_SB_ENV_PROTECTION
  GPHYFW_PAD := $(shell echo "$$(($(GPHYFW_PAD) + $(CONFIG_ENV_SIZE)))")
 endif
else
 GPHY_FIRMWARE = $(TOPDIR)/dummy
endif



ifdef CONFIG_BUILD_ENV_BLOCK
ENV_BLOCK=ubootenv.img
endif

spinandflag-${CONFIG_GIGA_DEVICE_SPINAND}=--gdsnand
APPDIR := $(srctree)/board/$(VENDOR)/$(BOARD)

ALL-$(CONFIG_LTQ_BOOT_FROM_NAND) += u-boot.ltq $(ENV_BLOCK)
ALL-$(CONFIG_LTQ_BOOT_FROM_NAND) += $(obj)/u-boot-spl-16k.bin
ALL-$(CONFIG_LTQ_BOOT_FROM_NAND) += u-boot.asc u-boot-nand.bin

LDSCRIPT_BOOTSTRAP := $(TOPDIR)/board/$(BOARDDIR)/bootstrap.lds
SFDDR_START_ADDR := $(CONFIG_NAND_SPL_TEXT_BASE)

ifdef CONFIG_NAND_BENAND
BCH_VAL = 0
else
BCH_VAL = 8
endif

DDR := $(CONFIG_DDR_DIR)

ifndef CONFIG_PRX300_DDR_CONFIG_FILE
ifdef CONFIG_NORMAL_MODE
CONFIG_PRX300_DDR_CONFIG_FILE := board/$(BOARDDIR)/$(DDR)/standard_power_mode.conf
else
CONFIG_PRX300_DDR_CONFIG_FILE := board/$(BOARDDIR)/$(DDR)/low_power_mode.conf
endif
endif

UART_FOR_DDR := $(srctree)/board/$(BOARDDIR)/ddr_for_uart.conf

SRAM_OFFSET_FLASH := ,$(CONFIG_FIX_OFFSET_IN_FLASH)

################################################################################
# secboot mod
################################################################################
LTQ_HEADER_OFFSET_EXTRA :=
SF_IMAGE_SOCMODE := 0
SF_IMAGE_JUMP := $(CONFIG_NAND_SPL_TEXT_BASE)

ifdef CONFIG_LTQ_SECURE_BOOT
 ifdef CONFIG_MANUBOOT
  ASC_TEXT_BASE = 0xA0900000
  ASC_MODE = 1
 else
  ASC_TEXT_BASE = 0xA0800000
  ASC_MODE = 2
 endif
else
ASC_TEXT_BASE = $(CONFIG_SYS_TEXT_BASE)
ASC_MODE = 0
endif

include $(srctree)/board/$(BOARDDIR)/Makefile.secboot
################################################################################

LIBS_BOOTSTRAP  = $(TOPDIR)/lib/bootstrap/libbootstrap.a
BOOTSTRAP_LDFLAGS = -Bstatic -T $(LDSCRIPT_BOOTSTRAP) -Ttext $(CONFIG_BOOTSTRAP_TEXT_BASE)

# create u-boot.ltq
u-boot.ltq: $(obj)/bootstrap.bin $(obj)/ddr.conf $(if $(filter $(CONFIG_SB_ENV_PROTECTION),$(strip y)),$(ENV_BLOCK),)
	@$(TOPDIR)/scripts_platform/pad2align.sh -n 10240 $(obj)/bootstrap.bin
	@cat $(obj)/bootstrap.bin > u-boot.ltq
	@cat $(obj)/u-boot.lzimg >> u-boot.ltq
ifdef CONFIG_SB_ENV_PROTECTION
	$(TOPDIR)/scripts_platform/pad2align.sh -n 0x20 u-boot.ltq
	cat $(ENV_BLOCK) >> u-boot.ltq
endif
ifdef CONFIG_PRX300_GPHY_FW_EMBEDDED
	@cp u-boot.bin u-boot-gphy.bin
	@$(TOPDIR)/scripts_platform/pad2align.sh -n 0x40000 u-boot-gphy.bin
	@$(TOPDIR)/scripts_platform/pad2align.sh -n $(GPHYFW_PAD) u-boot.ltq
	@cat $(GPHY_FIRMWARE) >> u-boot.ltq
endif
	$(call secboot-sign-ltq-if-required, $@)

# create u-boot-nand.bin
u-boot-nand.bin: u-boot.ltq $(obj)/u-boot-spl-16k.bin
	cp $(obj)/u-boot-spl-16k.bin u-boot-nand.bin
	cat u-boot.ltq >> u-boot-nand.bin

u-boot.asc: $(obj)/u-boot-spl-16k.bin
	cp u-boot.bin $(obj)/u-boot.bin.tmp
	$(call secboot-sign-for-asc-if-required, $(obj)/u-boot.bin.tmp)
	$(srctree)/board/$(BOARDDIR)/build_prx300_asc.pl $(UART_FOR_DDR) $(obj)/u-boot.bin.tmp \
		$(ASC_TEXT_BASE) u-boot.asc $(ASC_MODE)
	rm -f $(obj)/u-boot.bin.tmp

# create u-boot-spl-16k.bin
$(obj)/u-boot-spl-16k.bin: $(obj)/ddr.conf $(obj)/u-boot-spl.bin FORCE
ifndef CONFIG_A1_FIX
	$(call secboot-sign-fsb-if-required, $(obj)/u-boot-spl.bin)
	$(srctree)/scripts_platform/mk_ltq_header.pl $(spinandflag-y) --ddr $(srctree)/board/$(VENDOR)/$(BOARD)/dummy \
			--bch $(BCH_VAL) --col 2 --row 3 --blocksize $(CONFIG_NAND_BLOCK_SIZE) --pagesize $(CONFIG_NAND_PAGE_SIZE) \
			--offset $(CONFIG_NAND_PAGE_SIZE)$(LTQ_HEADER_OFFSET_EXTRA) --out $(srctree)/board/$(VENDOR)/$(BOARD)/header.ltq
	$(srctree)/scripts_platform/pad2align.sh -n 1760 $(srctree)/board/$(VENDOR)/$(BOARD)/header.ltq
	$(HOSTCC) -o $(APPDIR)/bch_enc.o $(srctree)/board/$(VENDOR)/$(BOARD)/bch_enc.c
	$(APPDIR)/bch_enc.o $(srctree)/board/$(VENDOR)/$(BOARD)/header.ltq $(srctree)/board/$(VENDOR)/$(BOARD)/header.bch $(ROM_HEADER_BCH_CAP)
	$(srctree)/scripts_platform/pad2align.sh -n $(CONFIG_NAND_PAGE_SIZE) $(srctree)/board/$(VENDOR)/$(BOARD)/header.bch
	$(srctree)/scripts_platform/mk_sf_image.pl -i $(obj)/u-boot-spl.bin -o $(srctree)/board/$(VENDOR)/$(BOARD)/output.bin \
			-j $(SF_IMAGE_JUMP) -m $(SF_IMAGE_SOCMODE) -d $(srctree)/board/$(VENDOR)/$(BOARD)/ddr.conf
	$(srctree)/scripts_platform/pad2align.sh -n 440 $(srctree)/board/$(VENDOR)/$(BOARD)/output.bin
	cp $(srctree)/board/$(VENDOR)/$(BOARD)/header.bch $(obj)/u-boot-spl-16k.bin
	cat $(srctree)/board/$(VENDOR)/$(BOARD)/output.bin >> $(obj)/u-boot-spl-16k.bin
	$(srctree)/scripts_platform/pad2align.sh -n $(CONFIG_NAND_SPL_BLOCK_SIZE) $(obj)/u-boot-spl-16k.bin
else
	$(call secboot-sign-fsb-if-required, $(obj)/u-boot-spl.bin)
	$(srctree)/scripts_platform/mk_ltq_header.pl $(spinandflag-y) --ddr $(srctree)/board/$(VENDOR)/$(BOARD)/dummy \
			--bch $(BCH_VAL) --col 2 --row 3 --blocksize $(CONFIG_NAND_BLOCK_SIZE) --pagesize $(CONFIG_NAND_PAGE_SIZE) \
			--offset $(CONFIG_NAND_PAGE_SIZE)$(LTQ_HEADER_OFFSET_EXTRA)$(SRAM_OFFSET_FLASH) \
			--out $(srctree)/board/$(VENDOR)/$(BOARD)/header.ltq
	$(srctree)/scripts_platform/pad2align.sh -n 1760 $(srctree)/board/$(VENDOR)/$(BOARD)/header.ltq
	$(HOSTCC) -o $(APPDIR)/bch_enc.o $(srctree)/board/$(VENDOR)/$(BOARD)/bch_enc.c
	$(APPDIR)/bch_enc.o $(srctree)/board/$(VENDOR)/$(BOARD)/header.ltq $(srctree)/board/$(VENDOR)/$(BOARD)/header.bch $(ROM_HEADER_BCH_CAP)
	$(srctree)/scripts_platform/pad2align.sh -n $(CONFIG_NAND_PAGE_SIZE) $(srctree)/board/$(VENDOR)/$(BOARD)/header.bch
	cp $(APPDIR)/sram_rom.img $(APPDIR)/sram_rom.ltq
	$(srctree)/scripts_platform/pad2align.sh -n 0x2000 $(APPDIR)/sram_rom.ltq
	$(srctree)/scripts_platform/mk_sf_image.pl -i $(obj)/u-boot-spl.bin -o $(srctree)/board/$(VENDOR)/$(BOARD)/output.bin \
			-j $(SF_IMAGE_JUMP) -m $(SF_IMAGE_SOCMODE) -d $(srctree)/board/$(VENDOR)/$(BOARD)/ddr.conf
	$(srctree)/scripts_platform/pad2align.sh -n 440 $(srctree)/board/$(VENDOR)/$(BOARD)/output.bin
	cp $(srctree)/board/$(VENDOR)/$(BOARD)/header.bch $(obj)/u-boot-spl-16k.bin
	cat $(APPDIR)/sram_rom.ltq >> $(obj)/u-boot-spl-16k.bin
	cat $(srctree)/board/$(VENDOR)/$(BOARD)/output.bin >> $(obj)/u-boot-spl-16k.bin
	$(srctree)/scripts_platform/pad2align.sh -n $(CONFIG_NAND_SPL_BLOCK_SIZE) $(obj)/u-boot-spl-16k.bin
endif

# generate ddr.conf
$(obj)/ddr.conf:
	@rm -rf $(srctree)/board/$(BOARDDIR)/ddr.conf
	@cp $(srctree)/$(CONFIG_PRX300_DDR_CONFIG_FILE) $(srctree)/board/$(BOARDDIR)/ddr.conf
	@awk -F'\n' '$$1 == "0x80000000 0xFFFF" {sub("0x80000000 0xFFFF", prev)} {prev=$$1;} 1'\
		$(srctree)/board/$(BOARDDIR)/ddr.conf > $(UART_FOR_DDR)

# create bootstrap.bin
$(obj)/bootstrap.bin: $(obj)/bootstrap
	$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@

# create bootstrap map
$(obj)/bootstrap: $(LIBS_BOOTSTRAP) $(OBJS_BOOTSTRAP) $(LDSCRIPT_BOOTSTRAP) FORCE
	$(LD) $(BOOTSTRAP_LDFLAGS) $$UNDEF_SYM $(OBJS_BOOTSTRAP) $(LIBS_BOOTSTRAP) \
                -Map bootstrap.map -o $(obj)/bootstrap

$(LIBS_BOOTSTRAP):
	$(Q)$(MAKE) -f $(srctree)/lib/bootstrap/Makefile all

$(ENV_BLOCK): $(obj)/u-boot-spl-16k.bin
	$(NM) -Ss u-boot >u-boot.sym
	$(TOPDIR)/scripts_platform/mk_envimg.sh $@

