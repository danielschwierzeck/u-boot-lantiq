/*
** Copyright (C) 2005 Wu Qi Ming <Qi-Ming.Wu@infineon.com>
**  
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
** 
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** 
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software 
** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
*/

To build a u-boot for danube board, user need to do the following things:
To configure u-boot for a proper board, user need to modify two files accordingly.

To configure u-boot for evaluation board, in danube-uboot/include/configs/danube.h, set
#define USE_EVALUATION_BOARD
#undef  USE_REFERENCE_BOARD
and vice-versa.

To let u-boot boot from ebu(flash,e.g), in danube-uboot/include/configus/danube.h, set 
#define   DANUBE_BOOT_FROM_EBU
Otherwise u-boot will be compiled for booting from RAM.

To use DDR RAM running at 111M, in danube-uboot/include/configus/danube.
h, set
#define  DANUBE_DDR_RAM_111M
#undef   DANUBE_DDR_RAM_166M
and vice-versa.

To define RAM size of RAM, in danube-uboot/include/configus/danube.
h, set
#define RAM_SIZE                0x2000000 /*32M ram*/
This is an example for a 32M RAM.


Besides above settings, user need to change danube-uboot/board/danube/config.mk to set the loading address of u-boot.
If U-Boot is to boot from EBU(flash), user needs to set
TEXT_BASE=0xB0000000
If u-boot is to boot from RAM, user needs to set
TEXT_BASE=0xa0400000

Use the script gct to build a uart downloadable u-boot image:
./gct danube_ref_ddr166.conf u-boot.srec u-boot.asc





